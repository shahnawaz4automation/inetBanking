# Declare loggers
status=error
name=PropertiesConfig
appenders=console, file
rootLogger.level=INFO
# off - FATAL - ERROR - WARN - INFO - DEBUG - TRACE OFEWIDT
# FATAL: Critical issues (like a fire in the library).
# ERROR: Serious issues (like a book being damaged).
# WARN: Potentially problematic events (like a book being late for return).
# INFO: General, important events (like a new book arriving).
# DEBUG: Minor, detailed events (like every step of cataloging a new book).
rootLogger.appenderRefs = ref_stdout, ref_logfile
rootLogger.appenderRef.ref_stdout.ref=STDOUT
rootLogger.appenderRef.ref_logfile.ref=LOGFILE

# Direct log messages to Console
appender.console.type=Console
appender.console.name=STDOUT
appender.console.layout.type=PatternLayout
appender.console.layout.pattern=[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1}:%L - %msg%n
# [INFO ] 2024-07-21 09:46:10.644 [main] TestLogger:19 - ChromeDriver object created
# appender.console.layout.pattern=%d{yyyy-MM-dd HH:mm:ss} %c{1} [%p] %m%n
# 2024-07-21 09:43:26 TestLogger [INFO] ChromeDriver object created
# appender.console.layout.pattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n
# 2024-07-21 09:44:06 INFO  TestLogger:19 - ChromeDriver object created

# Direct log messages to a log file
appender.file.type=File
appender.file.name=LOGFILE
# In log4j, if you want to clear the log file each time your application starts,
# you need to configure the log4j appender to overwrite the log file rather than appending to it.
# By default, FileAppender in log4j appends to the file. To clear the log file before writing to it, you can use FileAppender with the Append property set to false.
appender.file.Append=false
appender.file.fileName=./logs/Mylog4j-%d{yyyy-MM-dd_HH-mm-ss}.log
appender.file.layout.type=PatternLayout
appender.file.layout.pattern=[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1}:%L - %msg%n